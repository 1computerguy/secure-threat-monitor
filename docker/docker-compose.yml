version: "3.8"
services:
  netcap:
    image: dreadl0ck/netcap:alpine-v0.5.9
    container_name: netcap
    restart: unless-stopped
    networks:
      - capture-net
      - monitor-net
    expose:
      - 7777
    labels:
      org.label-schema.group: "net-capture"
  mercury:
    build:
      context: ./mercury
      dockerfile: Dockerfile
      labels:
        - "com.example.description=Labeled SSL/TLS Signatures"
    image: mercury:latest
    container_name: mercury
    restart: unless-stopped
    networks:
      - capture-net
      - monitor-net
    labels:
      org.label-schema.group: "net-capture"
  sflow-collector:
    image: sflow/host-sflow
    container_name: host-sflow
    restart: unless-stopped
    networks:
      - capture-net
      - monitor-net
    environment:
      - COLLECTOR=sflow-prometheus
      - NET=eth1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      org.label-schema.group: "net-capture"
  sflow-prometheus:
    image: sflow/prometheus
    container_name: sflow-prometheus
    restart: unless-stopped
    networks:
      - monitor-net
    expose:
      - 6343/udp
      - 8008
    labels:
      org.label-schema.group: "monitor"
#  sflow-ascii:
#    image: sflow/sflowtool
#    container_name: sflow-ascii
#    restart: unless-stopped
#    networks:
#      - monitor-net
#    labels:
#      org.label-schema.group: "monitor"
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitor"
  nodestats:
    image: prom/node-exporter
    container_name: nodestats
    expose:
      - 9100
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "host-capture"
  cadvisor:
    image: google/cadvisor
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "host-capture"
  loki:
    image: grafana/loki:1.6.1
    container_name: loki
    expose:
      - 3100
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitor"
    volumes:
      - loki-data:/loki
      - ./loki/loki-config.yml:/etc/loki/local-config.yml
    command: -config.file=/etc/loki/local-config.yaml
  promtail:
    image: grafana/promtail:1.6.1
    container_name: promtail
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitor"
    volumes:
      - /var/log:/var/log
      - ./promtail/promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
  grafana:
    build:
      context: ./grafana
      dockerfile: Dockerfile
      args:
        - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-clock-panel,simpod-json-datasource,
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/resources:/etc/grafana/provisioning
      - ./grafana/resources/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitor"

volumes:
  grafana-data:
  prometheus-data:
  netcap-data:
  mercury-data:
  loki-data:

networks:
  monitor-net:
    driver: bridge
  capture-net:
    driver: host