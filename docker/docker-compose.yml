version: "3.8"
services:
  netcap:
    image: dreadl0ck/netcap:alpine-v0.5.9
    container_name: netcap
    restart: unless-stopped
    network_mode: host
    expose:
      - 7777
    volumes:
      - type: volume
        source: netcap-data
        target: /capture/netcap
  pmercury:
    build:
      context: ./docker/pmercury
      dockerfile: Dockerfile
    image: pmercury
    container_name: pmercury
    restart: "no"
    network_mode: host
    command: ["-c", "eth1", "-f", "/output/pmercury.json"]
    volumes:
      - type: bind
        source: pmercury-data
        target: /endpoint_/output
  check-ip:
    build:
      context: ./docker/checkip
      dockerfile: Dockerfile
    image: checkip:latest
    restart: "no"
    networks:
      - monitor-net
    volumes:
      - type: bind
        source: checkip-data
        target: /output
  sflow-collector:
    image: sflow/host-sflow
    container_name: host-sflow
    restart: unless-stopped
    network_mode: host
    environment:
      - COLLECTOR=sflow-prometheus
      - NET=eth1
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock:ro
  sflow-prometheus:
    image: sflow/prometheus
    container_name: sflow-prometheus
    restart: unless-stopped
    networks:
      - monitor-net
    expose:
      - 6343/udp
      - 8008
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./docker/prometheus/prometheus.yml
        target: /etc/prometheus/prometheus.yml
      - type: volume
        source: prometheus-data
        target: /prometheus
    command: >-
      --config.file=/etc/prometheus/prometheus.yml
      --storage.tsdb.path=/prometheus
      --web.console.libraries=/usr/share/prometheus/console_libraries
      --web.console.templates=/usr/share/prometheus/consoles
    ports:
      - 9090:9090
    networks:
      - monitor-net
  nodestats:
    image: prom/node-exporter
    container_name: nodestats
    expose:
      - 9100
    restart: unless-stopped
    networks:
      - monitor-net
  cadvisor:
    image: google/cadvisor
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - type: bind
        source: /
        target: /rootfs:ro
      - type: bind
        source: /var/run
        target: /var/run:rw
      - type: bind
        source: /sys
        target: /sys:ro
      - type: bind
        source: /var/lib/docker/
        target: /var/lib/docker:ro
    restart: unless-stopped
    networks:
      - monitor-net
  loki:
    image: grafana/loki:1.6.1
    container_name: loki
    expose:
      - 3100
    restart: unless-stopped
    networks:
      - monitor-net
    volumes:
      - type: volume
        source: loki-data
        target: /loki
      - type: bind
        source: ./docker/loki/loki-config.yml
        target: /etc/loki/local-config.yml
    command: -config.file=/etc/loki/local-config.yaml
  promtail:
    image: grafana/promtail:1.6.1
    container_name: promtail
    restart: unless-stopped
    networks:
      - monitor-net
    volumes:
      - type: volume
        source: pmercury-data
        target: /var/log/pmercury
      - type: volume
        source: checkip-data
        target: /var/log/checkip
      - type: bind
        source: ./docker/promtail/promtail-config.yml
        target: /etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
  vmagent:
    container_name: vmagent
    image: victoriametrics/vmagent
    depends_on:
      - "victoriametrics"
    ports:
      - 8429:8429
    volumes:
      - type: volume
        source: vmagent-data
        target: /vmagentdata
      - type: bind
        source: ./docker/prometheus/prometheus.yml
        target: /etc/prometheus/prometheus.yml
    command:
      - '--promscrape.config=/etc/prometheus/prometheus.yml'
      - '--remoteWrite.url=http://victoriametrics:8428/api/v1/write'
    networks:
      - monitor-net
    restart: unless-stopped
  victoriametrics:
    container_name: victoriametrics
    image: victoriametrics/victoria-metrics
    ports:
      - 8428:8428
    volumes:
      - type: volume
        source: vm-data
        target: /storage
    command:
      - '--storageDataPath=/storage'
      - '--httpListenAddr=:8428'
    networks:
      - monitor-net
    restart: unless-stopped
  grafana:
    build:
      context: ./docker/grafana
      dockerfile: Dockerfile
      args:
        - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-clock-panel,simpod-json-datasource,natel-plotly-panel,ae3e-plotly-panel,petrslavotinek-carpetplot-panel,digiapulssi-breadcrumb-panel
    image: grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - type: volume
        source: grafana-data
        target: /var/lib/grafana
      - type: bind
        source: ./docker/grafana/grafana.ini
        target: /etc/grafana/grafana.ini
      - type: bind
        source: ./docker/grafana/resources
        target: /etc/grafana/provisioning
      - type: bind
        source: ./docker/grafana/resources/dashboards
        target: /etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=test
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - monitor-net

volumes:
  grafana-data:
  vmagent-data:
  prometheus-data:
    driver: local
    driver_opts:
      type: none
      device: /var/log/prometheus
      o: bind
  checkip-data:
    driver: local
    driver_opts:
      type: none
      device: /var/log/checkip
      o: bind
  netcap-data:
    driver: local
    driver_opts:
      type: none
      device: /var/log/netcap
      o: bind
  pmercury-data:
    driver: local
    driver_opts:
      type: none
      device: /var/log/pmercury
      o: bind
  loki-data:
    driver: local
    driver_opts:
      type: none
      device: /storage/loki
      o: bind
  vm-data:
    driver: local
    driver_opts:
      type: none
      device: /storage/vmdata
      o: bind

networks:
  monitor-net:
    driver: bridge